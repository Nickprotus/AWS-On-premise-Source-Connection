AWSTemplateFormatVersion: 2010-09-09

Metadata:
 AWS::CloudFormation::Interface:

  ParameterGroups:
    - 
      Label:
        default:  Network configuration 
      Parameters:
        - EnvironmentName
        - VpcCIDR
        - PublicSubnetCIDR
        - PrivateSubnetCIDR
    
  ParameterLabels: 
      VpcCIDR: 
        default: "What is the IPv4 address space for the VPC?"
      
      PublicSubnetCIDR:
        default: "What is the IPv4 address space, for the public subnet in the Availability Zone of the VPC?"
      
      PrivateSubnetCIDR:
        default: "What is the IPv4 address space, for the private subnet in the Availability Zone of the VPC?"
      
      EnvironmentName:
        default: "Which environment name will be prefixed onto each resource created in the template"

Parameters:
  EnvironmentName:
    Description: An environment name prefixed onto each resource created in the template and used to identify the resources
    Type: String
    Default: DE-Extract

  VpcCIDR:
    Description: The IPv4 address space, for the VPC
    Type: String
    Default: 192.168.0.0/16

  PublicSubnetCIDR:
    Description: The IPv4 address space, for the public subnet in the first Availability Zone of the VPC
    Type: String
    Default: 192.168.10.0/24

  PrivateSubnetCIDR:
    Description: The IPv4 address space, for the private subnet in the first Availability Zone of the VPC
    Type: String
    Default: 192.168.20.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 
        Ref: VpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: 
            Ref: EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: 
            Ref: EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: 
        Ref: InternetGateway
      VpcId: 
        Ref: VPC
  
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: VPC
      AvailabilityZone: "us-west-1a"
      CidrBlock: 
        Ref: PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 
            Sub: ${EnvironmentName} Public Subnet (AZ1)

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: VPC
      AvailabilityZone: "us-west-1a"
      CidrBlock: 
        Ref: PrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: 
            Sub: ${EnvironmentName} Private Subnet (AZ2)

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt: NatGatewayEIP.AllocationId
      SubnetId: 
        Ref: PublicSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: VPC
      Tags:
        - Key: Name
          Value: 
            Sub: ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: 
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Ref: InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        Ref: PublicRouteTable
      SubnetId: 
        Ref: PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: 
            Sub: ${EnvironmentName} Private Routes (AZ1)

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: 
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: 
        Ref: NatGateway

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        Ref: PrivateRouteTable
      SubnetId: 
        Ref: PrivateSubnet

  WindowsInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: 
        Ref: VPC
      Description: This group permits RDP access to an instance deployed within the public subnet of the VPC
      GroupName: WindowsInstanceSG
      SecurityGroupIngress:
        - 
          IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
      Tags:
       -  Key: "Name"
          Value: 
            Sub: ${EnvironmentName} WindowsInstanceSG

  FileServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: 
        Ref: VPC
      Description: The second security group, permitting ssh access to the data center's file server from an internal source within the VPC.
      GroupName: FileServerSG
      SecurityGroupIngress:
        - 
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 192.168.10.0/24
      Tags:
        - Key: "Name"
          Value: 
            Sub: ${EnvironmentName} FileServerSG
    
  FileGatewaySG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: 
        Ref: VPC
      Description: The file gateway security group use its VpcId to associate with the VPC created in the template.
      GroupName: FileGatewaySG
      SecurityGroupIngress:
        - 
          IpProtocol: tcp
          FromPort: 1
          ToPort: 65534
          CidrIp: 192.168.0.0/16
      Tags:
        - Key: "Name"
          Value: 
            Sub: ${EnvironmentName} FileGatewaySG