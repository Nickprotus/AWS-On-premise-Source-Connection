AWSTemplateFormatVersion: "2010-09-09"
Description: Spins up the CloudFormation Windows instance as a stack.

Metadata:
 AWS::CloudFormation::Interface:

  ParameterGroups:
    - 
      Label:
        default:  Network configuration 
      Parameters:
        - VPC
        - Subnet
        - SecurityGroupIds
    -
      Label: 
        default: Amazon EC2 Configuration
      Parameters: 
        - InstanceType
        - KeyName
        - LatestWindowsAmiId
     
  ParameterLabels: 
      VPC: 
        default: "Which VPC should this instance be deployed to?"
      
      Subnet:
        default: "Which subnet should this instance be deployed to?"
      
      KeyName:
        default: "Name of an existing EC2 Keypair to enable SSH to the instance"

      SecurityGroupIds:
        default: "Security group id for the resource"
      
      InstanceType:
        default: "Instance type and secifications"
      
      LatestWindowsAmiId:
        default: "The latest AmiId desired"

Parameters: 
  VPC:
    Description: VPC to deploy resources into.
    Type: 'AWS::EC2::VPC::Id'  
  
  KeyName: 
    Description: Name of an existing EC2 KeyPair to enable SSH access to the file server.
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  Subnet: 
    Description: Subnet IDs
    Type: "AWS::EC2::Subnet::Id"
      
  SecurityGroupIds:
    Description: Specify the security group/s for resources.
    Type: 'List<AWS::EC2::SecurityGroup::Id>'

  LatestWindowsAmiId:
    Description: AMI for Windows EC2
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/EC2LaunchV2-Windows_Server-2019-English-Full-Base'

Resources:
  WindowsEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: "us-west-1a"
      IamInstanceProfile: !Ref WindowsEC2InstanceProfile
      ImageId:  !Ref LatestWindowsAmiId
      InstanceType: "t2.micro"
      KeyName:  !Ref KeyName
      SecurityGroupIds: !Ref SecurityGroupIds 
      SubnetId: !Ref Subnet
      Tags: 
        - Key: Name
          Value: Windows-Instance

  WindowsEC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  
  WindowsInstanceRolePolicy: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "root"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource: "*"
      Roles: 
        - !Ref "WindowsEC2InstanceRole"

  WindowsEC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref WindowsEC2InstanceRole 

Outputs:
  WindowsEC2Instance:
    Description: Private IP address of the newly created File server EC2 instance
    Value: !GetAtt
      - WindowsEC2Instance
      - PrivateIp